
management:
  server:
    port: 9999
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    prometheus:
      enabled: true
    metrics:
      enabled: true
    health:
      probes:
        enabled: true
      show-details: always
      show-components: always
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: health,info,metrics,prometheus,quartz
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

spring:
  application:
    name: kafka-service

kafka-service:
  kafka:
    consumer:
      consumer-concurrency: ${KAFKA_CONSUMER_CONCURRENCY:1}
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      client-id: ${spring.application.name}
      group-id: ${KAFKA_GROUP_ID}
      topics: ${KAFKA_TOPICS}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET}
      session-timeout-ms: ${KAFKA_SESSION_TIMEOUT_MS}
      security:
        protocol: PLAINTEXT
      ssl:
        enabled: true
        truststore-location: ${KAFKA_TRUST_STORE_LOCATION}
        truststore-password: ${KAFKA_TRUST_STORE_PASSWORD}
        keystore-location: ${KAFKA_KEY_STORE_LOCATION}
        keystore-password: ${KAFKA_KEY_STORE_PASSWORD}
        key-password: ${KAFKA_KEY_PASSWORD}
        truststore-type: JKS
        keystore-type: JKS
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      client-id: ${spring.application.name}
      max-request-size: ${KAFKA_MAX_REQUEST_SIZE}
      batch-size: ${KAFKA_BATCH_SIZE}
      lingerMs: ${KAFKA_LINGER_MS}
      acks: ${ACKS}
      topic: ${KAFKA_PRODUCER_TOPIC}
server:
  port: 8081
